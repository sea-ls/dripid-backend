x-logging: &default-logging
  driver: json-file
  options:
    max-size: 10m
    tag: "{{.Name}}"

x-low-prior-service-limitation: &resources-low
  memory: '1G'

x-service-limitation: &resources-high
  memory: '3G'

x-health-check: &actuator-health-check
  test: "curl --fail --silent localhost:8080/api/actuator/health | grep UP || exit 1"
  interval: 20s
  timeout: 5s
  retries: 6
  start_period: 10m

x-java-low-resource-reservation: &reservation-low
  reservations:
    memory: 700M
  limits:
    memory: 1G

x-update-config: &update-config-30s
  monitor: 30s
  order: start-first

x-environment: &environment
  JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000 -Dnetworkaddress.cache.ttl=60 -Dsun.net.inetaddr.ttl=60
  VIRTUAL_PORT: 8080
  INSTANCE_SLOT: '{{.Task.Slot}}'
  INSTANCE_NAME: '{{index .Service.Labels "su.opencode.service"}}'
  INSTANCE_STACK: '{{index .Service.Labels "com.docker.stack.namespace"}}'
  SHOW_SQL: $SHOW_SQL

x-default-spring-service-configuration: &default-spring-config
  stop_grace_period: 1m
  logging: *default-logging
  healthcheck: *actuator-health-check
  deploy: &default-spring-deploy
    resources: *reservation-low
    update_config: *update-config-30s
  environment: *environment

x-postgres-default-config: &postgres-default-config
  image: ${DOCKER_REPO_URL}${LOCAL_SLASH}docker/postgres-16:latest
  stop_grace_period: 1m30s
  shm_size: 1gb #Не работает в swarm режиме
  logging: *default-logging

#Пустая строка здесь важна для объединения файлов
